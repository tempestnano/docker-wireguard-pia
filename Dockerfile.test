FROM alpine AS builder

# Download QEMU, see https://github.com/docker/hub-feedback/issues/1261
ENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz
RUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1


FROM arm32v7/alpine:latest

# Add QEMU
COPY --from=builder qemu-arm-static /usr/bin

RUN apk add --no-cache \
    bash \
    ca-certificates \
    curl \
    ip6tables \
    iptables \
    jq \
    openssl \
    wireguard-tools

ENV LOCAL_NETWORK= \
    KEEPALIVE=0 \
    VPNDNS= \
    USEMODERN=1 \
    PORT_FORWARDING=0 \
    PORT_PERSIST=0 \
    EXIT_ON_FATAL=0 \
    FIREWALL=1 \
    LOC=ca_ontario \
    USER=p00000000 \
    PASS=00000 

#import pia stuff
RUN mkdir /scripts & \
    curl -L https://github.com/pia-foss/manual-connections/archive/master.tar.gz | tar zxvf - -C /scripts --strip-components 1

# Modify wg-quick so it doesn't die without --privileged
# Set net.ipv4.conf.all.src_valid_mark=1 on container creation using --sysctl if required instead
RUN sed -i 's/cmd sysctl.*/set +e \&\& sysctl -q net.ipv4.conf.all.src_valid_mark=1 \&\& set -e/' /usr/bin/wg-quick

# Get the PIA CA cert
ADD https://raw.githubusercontent.com/pia-foss/desktop/master/daemon/res/ca/rsa_4096.crt /rsa_4096.crt

# The PIA desktop app uses this public key to verify server list downloads
# https://github.com/pia-foss/desktop/blob/master/daemon/src/environment.cpp#L30
COPY ./RegionsListPubKey.pem /RegionsListPubKey.pem

# Add main work dir to PATH
WORKDIR /scripts

# Copy scripts to containers
# COPY run pf_success.sh ./extra/pf.sh ./extra/pia-auth.sh ./extra/wg-gen.sh /scripts/
COPY run pf_success.sh /scripts/
RUN chmod 755 /scripts/*

# Store persistent PIA stuff here (auth token, server list)
VOLUME /pia

# Store stuff that might be shared with another container here (eg forwarded port)
VOLUME /pia-shared

#CMD ["/scripts/run"]
ENTRYPOINT [ "/bin/sh" ]
